{"version":3,"sources":["file:///C:/Users/14416/Desktop/gameassets/cocos-start-demo-master/assets/scripts/player/animation/playerIdle.ts"],"names":["_decorator","PlayerState","DIRECTION","ccclass","property","PlayerIdle","constructor","stateMachine","animManage","anim","mode","name","_dir","TOP","_direction","_pathMap","Map","set","BOTTOM","LEFT","RIGHT","stateMap","pathMap","direction","dir","has","animClip","get","animationManage","animComp","defaultClip","play","animPath","createAnimClip","then","enter","update","exit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AAEAC,MAAAA,W,iBAAAA,W;;AAEAC,MAAAA,S,iBAAAA,S;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;4BAGjBK,U,WADZF,OAAO,CAAC,YAAD,C,yBAAR,MACaE,UADb;AAAA;AAAA,sCAC4C;AAKxCC,QAAAA,WAAW,CAACC,YAAD,EAAmCC,UAAnC,EAAqEC,IAArE,EAAmFC,IAAnF,EAAgHC,IAAhH,EAA8HC,IAA9H,EAA+I;AACtJ,gBAAML,YAAN,EAAmBC,UAAnB,EAA8BC,IAA9B,EAAmCC,IAAnC,EAAwCC,IAAxC;;AADsJ;;AAAA;;AAAA,8CAF1H;AAAA;AAAA,sCAAUE,GAEgH;;AAEtJ,eAAKC,UAAL,GAAkBF,IAAlB;AACA,eAAKG,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;;AACA,eAAKD,QAAL,CAAcE,GAAd,CAAkB;AAAA;AAAA,sCAAUJ,GAA5B,EAAgC,yBAAhC;;AACA,eAAKE,QAAL,CAAcE,GAAd,CAAkB;AAAA;AAAA,sCAAUC,MAA5B,EAAmC,4BAAnC;;AACA,eAAKH,QAAL,CAAcE,GAAd,CAAkB;AAAA;AAAA,sCAAUE,IAA5B,EAAiC,0BAAjC;;AACA,eAAKJ,QAAL,CAAcE,GAAd,CAAkB;AAAA;AAAA,sCAAUG,KAA5B,EAAkC,2BAAlC;;AACA,eAAKC,QAAL,GAAgB,IAAIL,GAAJ,EAAhB;AACH;;AAEU,YAAPM,OAAO,GAAE;AAAE,iBAAO,KAAKP,QAAZ;AAAuB;;AAEzB,YAATQ,SAAS,GAAE;AAAE,iBAAO,KAAKT,UAAZ;AAAyB;;AAE7B,YAATS,SAAS,CAACC,GAAD,EAAgB;AACzB,eAAKV,UAAL,GAAkBU,GAAlB;;AACA,cAAG,KAAKH,QAAL,CAAcI,GAAd,CAAkBD,GAAlB,CAAH,EAA0B;AACtB,iBAAKE,QAAL,GAAgB,KAAKL,QAAL,CAAcM,GAAd,CAAkBH,GAAlB,CAAhB;AACA,iBAAKI,eAAL,CAAqBC,QAArB,CAA8BC,WAA9B,GAA4C,KAAKJ,QAAjD;AACA,iBAAKE,eAAL,CAAqBC,QAArB,CAA8BE,IAA9B;AACH,WAJD,MAIM;AACF,iBAAKC,QAAL,GAAgB,KAAKV,OAAL,CAAaK,GAAb,CAAiBH,GAAjB,CAAhB;AACA,iBAAKS,cAAL,GAAsBC,IAAtB,CAA2B,MAAI;AAC3B,mBAAKb,QAAL,CAAcJ,GAAd,CAAkBO,GAAlB,EAAuB,KAAKE,QAA5B;AACH,aAFD;AAGH;AACJ;;AAEDS,QAAAA,KAAK,GAAS;AACV,gBAAMA,KAAN;AACA,eAAKd,QAAL,CAAcJ,GAAd,CAAkB,KAAKM,SAAvB,EAAkC,KAAKG,QAAvC;AACH;;AAEDU,QAAAA,MAAM,GAAS;AACX,gBAAMA,MAAN;AACH;;AAEDC,QAAAA,IAAI,GAAS;AACT,gBAAMA,IAAN;AACH;;AA7CuC,O","sourcesContent":["import { _decorator, AnimationClip} from 'cc';\nimport { PlayerAnimController } from 'db://assets/scripts/player/animation/playerAnimController';\nimport { PlayerState } from 'db://assets/scripts/player/animation/playerState';\nimport { PlayerStateMachine } from 'db://assets/scripts/player/animation/playerStateMachine';\nimport { DIRECTION } from 'db://assets/Enum';\nconst { ccclass, property } = _decorator;\n\n@ccclass('PlayerIdle')\nexport class PlayerIdle extends PlayerState {\n    private _pathMap: Map<DIRECTION, string>;\n    private stateMap: Map<DIRECTION,AnimationClip>;\n    private _direction: DIRECTION = DIRECTION.TOP;\n\n    constructor(stateMachine: PlayerStateMachine, animManage: PlayerAnimController, anim: string, mode: AnimationClip.WrapMode,name: string, _dir?: DIRECTION){\n        super(stateMachine,animManage,anim,mode,name);\n        this._direction = _dir;\n        this._pathMap = new Map();\n        this._pathMap.set(DIRECTION.TOP,'texture/player/idle/top');\n        this._pathMap.set(DIRECTION.BOTTOM,'texture/player/idle/bottom');\n        this._pathMap.set(DIRECTION.LEFT,'texture/player/idle/left');\n        this._pathMap.set(DIRECTION.RIGHT,'texture/player/idle/right');\n        this.stateMap = new Map<DIRECTION,AnimationClip>();\n    }\n\n    get pathMap(){ return this._pathMap; }\n\n    get direction(){ return this._direction; }\n\n    set direction(dir: DIRECTION){\n        this._direction = dir;\n        if(this.stateMap.has(dir)){\n            this.animClip = this.stateMap.get(dir);\n            this.animationManage.animComp.defaultClip = this.animClip;\n            this.animationManage.animComp.play();\n        }else {\n            this.animPath = this.pathMap.get(dir);\n            this.createAnimClip().then(()=>{\n                this.stateMap.set(dir, this.animClip);\n            });\n        }\n    }\n\n    enter(): void {\n        super.enter();\n        this.stateMap.set(this.direction, this.animClip);\n    }\n\n    update(): void {\n        super.update();\n    }\n\n    exit(): void {\n        super.exit();\n    }\n}\n"]}